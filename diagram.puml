@startuml

class World {
    + personas: dict[str, Persona]
    + distances: List[List[int]]
    + rumor_visor: RumorVisor
    + start(): void
    + shuffle(): void
}

class Persona {
    + name: str
    - scratch: Scratch
    - associative_memory: AssociativeMemory
    + reflect(): void
    + retrieve(): dict
    + answer(): List[str]
    + generate_rumor(): str
    + get_answer(): void
}

class RumorVisor {
    - rumors: List
    + add_rumor(): void
    + get_rumors(): List
}

class AssociativeMemory {
    - id_to_node: List[id]
    - seq_chat: List
    - seq_thought: List
    + add_chat(): void
    + add_thought(): void
    + get_summarized_last_events(): set
    + get_str_desc_chats(): str
    + get_str_desc_thoughts(): str
    + retrieve_relevant_thoughts(): set
}

class Scratch {
    + name: str
    + first_name: str
    + last_name: str
    + age: int
    + innate_traits: str
    + leaned_traits: str
    + lifestyle: str
    + chatting_with: str = None
    + chat: List[List[str]] = None
    + mendacity_level: int
    + get_summary(): str
    + get_summary_dict(): dict
    + get_summary_chat(): str
}

class ConceptNode {
    + node_id: int
    + node_type: str
    + description: str
    + embedding_key: str
    + poignancy: int
    + subject: str
    + predicate: str
    + object: str
    + spo_summary(): tuple
}

World "1" *-- "2..*" Persona
Persona "1" *-- "1" Scratch
Persona "1" *-- "1" AssociativeMemory
AssociativeMemory "1" *-- "0..*" ConceptNode
World "1" *-- "1" RumorVisor

@enduml 